version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: backend-boiler-api
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
      - "9229:9229" # For debugging
    environment:
      - NODE_ENV=development
      - PORT=3000
      # Database - SQLite for development
      - DB_TYPE=sqlite
      - DB_PATH=./data/database.sqlite
      # Authentication
      - JWT_SECRET=dev_jwt_secret
      - JWT_EXPIRY=24h
      - REFRESH_TOKEN_SECRET=dev_refresh_secret
      - REFRESH_TOKEN_EXPIRY=7d
      # Logging
      - LOG_LEVEL=debug
      - LOG_FORMAT=dev
      # Security
      - CORS_ORIGIN=http://localhost:3000
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=100
    depends_on:
      - postgres # Even though we use SQLite in dev, keeping Postgres for testing
    command: npm run dev
    networks:
      - backend-network

  postgres:
    image: postgres:15-alpine
    container_name: backend-boiler-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: backend_boiler_test
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

  # Add Redis later if needed
  # redis:
  #   image: redis:7-alpine
  #   container_name: backend-boiler-redis
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - backend-network

volumes:
  postgres_data:

networks:
  backend-network:
    driver: bridge